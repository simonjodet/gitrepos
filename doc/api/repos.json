[
    {
        "name": "List repositories",
        "description": "List the given owner's repositories",
        "url": "/v1/repos/:owner_name",
        "method": "GET",
        "url_params": null,
        "header_params": [
            "Cookie: SESSION=session token(string)"
        ],
        "success_response": {
            "code": "200 OK",
            "body": [
                {
                    "id": "owner_name/repo_name_1",
                    "description": "repository description(string)",
                    "urls": {
                        "ssh": "SSH clone URL(string)"
                    }
                },
                {
                    "id": "owner_name/repo_name_2",
                    "description": "repository description(string)",
                    "urls": {
                        "ssh": "SSH clone URL(string)"
                    }
                }
            ]
        },
        "error_responses": [
            {
                "code": "401 Unauthorized",
                "body": {
                    "code": 401,
                    "error": "Requires authentication and authorization",
                    "doc": "/docs/repos.json"
                }
            }
        ],
        "sample_call": "TODO"
    },
    {
        "name": "Create repository",
        "description": "Create a repository for the given owner",
        "url": "/v1/repos/:owner_name",
        "method": "POST",
        "url_params": null,
        "header_params": [
            "Cookie: SESSION=session token(string)"
        ],
        "body_params": {
            "id": "owner_name(string:3:64)/repo_name(string:1:128)",
            "description": "repository description(string:0:2048)"
        },
        "success_response": {
            "code": "201 Created",
            "body": {
                "id": "owner_name/repo_name",
                "description": "repository description(string)",
                "urls": {
                    "ssh": "SSH clone URL(string)"
                }
            }
        },
        "error_responses": [
            {
                "code": "400 Bad Request",
                "body": {
                    "code": 400,
                    "error": "Invalid ID",
                    "doc": "/docs/repos.json"
                }
            },
            {
                "code": "400 Bad Request",
                "body": {
                    "code": 400,
                    "error": "Invalid description",
                    "doc": "/docs/repos.json"
                }
            },
            {
                "code": "401 Unauthorized",
                "body": {
                    "code": 401,
                    "error": "Requires authentication and authorization",
                    "doc": "/docs/repos.json"
                }
            },
            {
                "code": "409 Conflict",
                "body": {
                    "code": 409,
                    "error": "This owner already have a repository with the same name",
                    "doc": "/docs/repos.json"
                }
            }
        ],
        "sample_call": "TODO"
    },
    {
        "name": "Delete repository",
        "description": "Delete an account from the given owner's account",
        "url": "/v1/repos/:owner_name/:repo_name",
        "method": "DELETE",
        "url_params": null,
        "header_params": [
            "Cookie: SESSION=session token(string)"
        ],
        "body_params": null,
        "success_response": {
            "code": "200 OK",
            "body": null
        },
        "error_responses": [
            {
                "code": "400 Bad Request",
                "body": {
                    "code": 400,
                    "error": "Invalid repository name",
                    "doc": "/docs/repos.json"
                }
            },
            {
                "code": "404 Not Found",
                "body": {
                    "code": 404,
                    "error": "Unknown repository name",
                    "doc": "/docs/repos.json"
                }
            },
            {
                "code": "401 Unauthorized",
                "body": {
                    "code": 401,
                    "error": "Requires authentication and authorization",
                    "doc": "/docs/repos.json"
                }
            }
        ],
        "sample_call": "TODO"
    }
]